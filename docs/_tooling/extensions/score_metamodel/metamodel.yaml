# yaml-language-server: $schema=./metamodel-schema.json

needs_types_base_options:
  optional_options:
    source_code_link: "^https://github.com/eclipse-score/score/blob/.*$"

needs_types:

  ##############################################################################
  # Process Metamodel
  ##############################################################################
  # Standards
  std_req:
    title: "Standard Requirement"
    prefix: "std_req__"
    mandatory_options:
      id: "std_req__(iso26262|iso21434|isopas8926|aspice_40)__[0-9a-zA-Z_-]*$"
      status: "^(valid)$"
    optional_links:
      links: "^.*$"

  std_wp:
    title: "Standard Work Product"
    prefix: "std_wp__"
    mandatory_options:
      id: "std_wp__(iso26262|iso21434|isopas8926|aspice_40)__[0-9a-z_]*$"
      status: "^(valid)$"
  # Workflow
  workflow:
    title: "Workflow"
    prefix: "wf__"
    mandatory_options:
      id: "^wf__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    mandatory_links:
      input: "^wp__.*$"
      output: "^wp__.*$"
      approved_by: "^rl__.*$"
      responsible: "^rl__.*$"
    optional_links:
      supported_by: "^rl__.*$"
      contains: "^gd_(req|temp|chklst|guidl|meth)__.*$"
      has: "^doc_(getstrt|concept)__.*$"
  # Guidances
  gd_req:
    title: "Process Requirements"
    prefix: "gd_req__"
    mandatory_options:
      id: "^gd_req__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    optional_links:
      complies: "^std_req__(iso26262|iso21434|isopas8926|aspice_40)__.*$"
      satisfies: "^wf__.*$"

  gd_temp:
    title: "Process Template"
    prefix: "gd_temp__"
    mandatory_options:
      id: "^gd_temp__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    optional_links:
      complies: "std_req__(iso26262|iso21434|isopas8926|aspice_40)__.*$"

  gd_chklst:
    title: "Process Checklist"
    prefix: "gd_chklst__"
    mandatory_options:
      id: "^gd_chklst__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    optional_links:
      complies: "std_req__(iso26262|iso21434|isopas8926|aspice_40)__.*$"

  gd_guidl:
    title: "Process Guideline"
    prefix: "gd_guidl__"
    mandatory_options:
      id: "^gd_guidl__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    optional_links:
      complies: "std_req__(iso26262|iso21434|isopas8926|aspice_40)__.*$"

  gd_method:
    title: "Process Method"
    prefix: "gd_meth__"
    mandatory_options:
      id: "^gd_meth__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    optional_links:
      complies: "std_req__(iso26262|iso21434|isopas8926|aspice_40)__.*$"
  # Score Workproduct
  workproduct:
    title: "Workproduct"
    prefix: "wp__"
    mandatory_options:
      id: "^wp__[0-9a-z_]*$"
      status: "^(valid|draft)$"
    optional_links:
      complies: "std_(wp__iso26262|wp__iso21434|wp__isopas8926|iic_aspice_40)__.*$"
  # Role
  role:
    title: "Role"
    prefix: "rl__"
    mandatory_options:
      id: "^rl__[0-9a-z_]*$"
    optional_links:
      contains: "^rl__.*$"
  # Documents
  doc_concept:
    title: "Concept Definition"
    prefix: "doc_concept__"
    mandatory_options:
      id: "^doc_concept__[0-9a-z_]*$"
      status: "^(valid|draft)$"

  doc_getstrt:
    title: "Getting Startet"
    prefix: "doc_getstrt__"
    mandatory_options:
      id: "^doc_getstrt__[0-9a-z_]*$"
      status: "^(valid|draft)$"

  ##############################################################################
  # Score Metamodel
  ##############################################################################
  # General
  document:
    title: "Generic Document"
    prefix: "doc__"
    mandatory_options:
      id: "^doc__[0-9a-z_]*$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|draft|invalid)$"
    optional_options:
      realizes: "^wp__.+$"
  # Requirements
  stkh_req:
    title: "Stakeholder Requirement"
    prefix: "stkh_req__"
    mandatory_options:
      id: "^stkh_req__[0-9a-z_]*$"
      reqtype: "^(Functional|Interface|Process|Legal|Non-Functional)$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
      rationale: "^.+$"
    optional_options:
      codelink: "^.*$"
      testlink: "^.*$"
      reqcovered: "^(YES|NO)$"
      testcovered: "^(YES|NO)$"
      hash: "^.*$"

  feat_req:
    title: "Feature Requirement"
    prefix: "feat_req__"
    style: "node"
    mandatory_options:
      id: "^feat_req__[0-9a-z_]*$"
      reqtype: "^(Functional|Interface|Process|Legal|Non-Functional)$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^stkh_req__.*$"
    optional_options:
      codelink: "^.*$"
      testlink: "^.*$"
      reqcovered: "^(YES|NO)$"
      testcovered: "^(YES|NO)$"
      hash: "^.*$"

  comp_req:
    title: "Component Requirement"
    prefix: "comp_req__"
    mandatory_options:
      id: "^comp_req__[0-9a-z_]*$"
      reqtype: "^(Functional|Interface|Process|Legal|Non-Functional)$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^feat_req__.*$"
    optional_options:
      codelink: "^.*$"
      testlink: "^.*$"
      reqcovered: "^(YES|NO)$"
      testcovered: "^(YES|NO)$"
      hash: "^.*$"

  tool_req:
    title: "Tool Requirement"
    prefix: "tool_req__"
    mandatory_options:
      id: "^tool_req__[0-9a-z_]*$"
      reqtype: "^(Functional|Interface|Process|Legal|Non-Functional)$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^stkh_req__.*$"
    optional_options:
      codelink: "^.*$"
      testlink: "^.*$"
      reqcovered: "^(YES|NO)$"
      testcovered: "^(YES|NO)$"
      hash: "^.*$"

  aou_req:
    title: "Assumption of Use"
    prefix: "aou_req__"
    mandatory_options:
      id: "^aou_req__[0-9a-z_]*$"
      reqtype: "^(Functional|Interface|Process|Legal|Non-Functional)$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    optional_options:
      codelink: "^.*$"
      testlink: "^.*$"
      reqcovered: "^(YES|NO)$"
      testcovered: "^(YES|NO)$"
      hash: "^.*$"
    optional_links:
      mitigates: "^.*$"
  # Architecture
  feat_arc_sta:
    title: "Feature Architecture Static View"
    prefix: "feat_arc_sta__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^feat_arc_sta__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^feat_req__.*$"

  feat_arc_dyn:
    title: "Feature Architecture Dynamic View"
    prefix: "feat_arc_dyn__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^feat_arc_dyn__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^feat_req__.*$"

  feat_arc_int:
    title: "Feature Architecture Interfaces"
    prefix: "feat_arc_int__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^feat_arc_int__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^feat_req__.*$"

  feat_arc_int_op:
    title: "Feature Architecture Interface Operation"
    prefix: "feat_arc_int_op__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      # Original code uses ^FEAT_ARC_INT_OP__, but actually typed ^COMP_ARC_INT__ in comp_arc_int_op.
      # This might be an original mismatch, but we'll keep it consistent with the Python code:
      id: "^feat_arc_int_op__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
      # no mandatory_links in the old code (commented out lines omitted)

  mod_arc_sta:
    title: "Module Architecture Static View"
    prefix: "mod_arc_sta__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^mod_arc_sta__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"

  comp_arc_sta:
    title: "Component Architecture Static View"
    prefix: "comp_arc_sta__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^comp_arc_sta__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^comp_req__.*$"

  comp_arc_dyn:
    title: "Component Architecture Dynamic View"
    prefix: "comp_arc_dyn__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^comp_arc_dyn__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^comp_req__.*$"

  comp_arc_int:
    title: "Component Architecture Interfaces"
    prefix: "comp_arc_int__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      id: "^comp_arc_int__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^comp_req__.*$"

  comp_arc_int_op:
    title: "Component Architecture Interface Operation"
    prefix: "comp_arc_int_op__"
    color: "#FEDCD2"
    style: "card"
    mandatory_options:
      # Original code says id: "^COMP_ARC_INT__[0-9a-z_]*$", so we keep it as is:
      id: "^comp_arc_int__[0-9a-z_]*$"
      security: "^(YES|NO)$"
      safety: "^(QM|ASIL_B|ASIL_D)$"
      status: "^(valid|invalid)$"
    mandatory_links:
      satisfies: "^comp_req__.*$"

# Extra link types, which shall be available and allow need types to be linked to each other.
# We use a dedicated linked type for each type of a conncetion, for instance from
# a specification to a requirement. This makes filtering and visualization of such connections
# much easier, as we can sure the target need of a link has always a specific type.
# Docs: https://sphinx-needs.readthedocs.io/en/latest/configuration.html#needs-extra-links
needs_extra_links:
  ##############################################################
  #  Process Metamodel
  ##############################################################
  # Workflow
  contains:
    incoming: "is contained by"
    outgoing: "contains"

  has:
    incoming: "relates to"
    outgoing: "has"

  input:
    incoming: "is input to"
    outgoing: "needs input"

  output:
    incoming: "is output from"
    outgoing: "outputs"

  # Roles
  responsible:
    incoming: "is responsible for"
    outgoing: "responsible"

  approved_by:
    incoming: "approves"
    outgoing: "approved by"

  supported_by:
    incoming: "supports"
    outgoing: "supported by"

  # Workproduct
  complies:
    incoming: "complies to"
    outgoing: "complies"

  ##############################################################
  #  Score Metamodel
  ##############################################################
  # Requirements
  satisfies:
    incoming: "is satisfied by"
    outgoing: "satisfies"

  # Architecture
  implements:
    incoming: "implemented by"
    outgoing: "implements"
